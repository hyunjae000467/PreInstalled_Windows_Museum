<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Htm-Help" CONTENT="SCEHlpMa.htm#Main_Contents">
<title>SpreadCE Help</title>
</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<!-- PegHelp -->
<p><A NAME="Main_Contents"></A><b>Macros</b></p><UL></UL>
<p>Macros can be used to create <a href="SCEHlpMa.htm#userdeffunctions">user-defined functions</a> to use in your spreadsheets, and <a href="SCEHlpMa.htm#userdefcommands">user-defined commands</a> to automate tasks.</p>
<BR CLEAR=ALL>
<!-- PegHelp -->
<hr>
<!-- ************************Topic Break************************* -->
<p><a name="userdeffunctions"></a><b>User-defined functions</b></p><UL></UL>
<p>Macros are useful for user-defined functions in 2 situations:<br>
1. You may have a complex function, which is composed of many nested functions, which is used in many places on your worksheet. A user-defined function would save you a lot of typing by specifying the actual calculation in only one place.<br>
2. You may need to use an iterative or recursive calculation that has to be performed a certain number of times before a result is found.</p>
<p>These are the steps for entering a user-defined function:</p>
<p>1. Use the Insert Macro sheet menu option to insert a macro sheet in the workbook. Macros must be stored on macro sheets. You can have many macros on a single macro sheet.</p>
<p>2. Enter the macro function statements. A user-defined function macro will usually begin with one or more ARGUMENT functions to receive the parameters, and it must end with a RETURN function.</p>
<p>This example calculates the approximate integral of the function sin(x) between a lower and upper limit using the trapezium rule and dividing the area into 100 slices:</p>
<table border="1" cellspacing="0" bordercolordark="#FFFFFF" bordercolorlight="#808080">
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">&nbsp</td>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000"><p align="center">A</p></td>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000"><p align="center">B</p></td>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000"><p align="center">C</p></td>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000"><p align="center">D</p></td>
</tr>
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">1</td>
	<td>Integral:</td>
	<td>=ARGUMENT(,1,D1)</td>
	<td>lower:</td>
	<td>&nbsp;</td>
</tr>
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">2</td>
	<td>&nbsp</td>
	<td>=ARGUMENT(,1,D2)</td>
	<td>upper:</td>
	<td>&nbsp</td>
</tr>
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">3</td>
	<td>&nbsp</td>
	<td>=SET.VALUE(D3,0)</td>
	<td>sum:</td>
	<td>&nbsp</td>
</tr>
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">4</td>
	<td>&nbsp</td>
	<td>=SET.VALUE(D4,SIN(D1))</td>
	<td>y0:</td>
	<td>&nbsp</td>
</tr>
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">5</td>
	<td>&nbsp</td>
	<td>=SET.VALUE(D5,SIN(D2))</td>
	<td>yn:</td>
	<td>&nbsp</td>
</tr>
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">6</td>
	<td>&nbsp</td>
	<td>=SET.VALUE(D6,1)</td>
	<td>i:</td>
	<td>&nbsp</td>
</tr>
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">7</td>
	<td>&nbsp</td>
	<td>=WHILE(D6&lt;D7)</td>
	<td>steps:</td>
	<td>100</td>
</tr>
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">8</td>
	<td>&nbsp</td>
	<td>=SET.VALUE(D8,D1+(D2-D1)*D6/D7)</td>
	<td>x:</td>
	<td>&nbsp;</td>
</tr>
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">9</td>
	<td>&nbsp</td>
	<td>=SET.VALUE(D3,D3+SIN(D8))</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
</tr>
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">10</td>
	<td>&nbsp</td>
	<td>=SET.VALUE(D6,D6+1)</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
</tr>
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">11</td>
	<td>&nbsp</td>
	<td>=NEXT()</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
</tr>
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">12</td>
	<td>&nbsp</td>
	<td>=RETURN((D2-D1)/D7/2*(D4+D5+2*D3))</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
</tr>
</table>
<p>3. Use the Insert Name Define menu option to add a name for the macro. For the example above, you could define a name called 'integral', which refers to cell: Macro1!$B$1. Note that the macro name in cell A1 is for our reference only, it is not used by the program.</p>
<p>4. Then on your worksheet (or even in another macro), use the defined name like an ordinary worksheet function name.<br>
For the example above, if you enter 0 in cell A1 on your worksheet, and =PI() in cell A2 on your worksheet, and =integral(A1,A2) in cell A3, then cell A3 will display 1.9998355 (higher accuracy could be obtained with a larger number of steps but the calculation would take correspondingly longer).<br></p>
<p>Here is an example that uses recursion. Because macro sheets do not directly support recursion, I have implemented a simple stack to store the values at each level by concatenating them together in a string.<br>
This function displays a number as text:</p>
<table border="1" cellspacing="0" bordercolordark="#FFFFFF" bordercolorlight="#808080">
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">&nbsp</td>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000"><p align="center">A</p></td>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000"><p align="center">B</p></td>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000"><p align="center">C</p></td>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000"><p align="center">D</p></td>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000"><p align="center">E</p></td>
</tr>
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">1</td>
	<td nowrap>Say number:</td>
	<td>=ARGUMENT(,1,D1)</td>
	<td>input:</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
</tr>
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">2</td>
	<td>&nbsp</td>
	<td>=SET.VALUE(D2,&quot;&quot;)</td>
	<td>output:</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
</tr>
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">3</td>
	<td>&nbsp</td>
	<td>=SET.VALUE(D1,INT(D1))</td>
	<td>temp:</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
</tr>
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">4</td>
	<td>&nbsp</td>
	<td>=IF(D1&lt;=0,RETURN(D2))</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
</tr>
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">5</td>
	<td>&nbsp</td>
	<td>=IF(D1&gt;=1000000)</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
</tr>
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF"	bordercolorlight="#000000">6</td>
	<td nowrap>stack input</td>
	<td>=SET.VALUE(E1,D1&amp;&quot;|&quot;&amp;E1)</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
</tr>
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">7</td>
	<td>stack output</td>
	<td>=SET.VALUE(E2,D2&amp;&quot;|&quot;&amp;E2)</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
</tr>
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">8</td>
	<td>get millions</td>
	<td>=SET.VALUE(D3,saynumber(D1/1000000))</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
</tr>
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">9</td>
	<td nowrap>unstack output</td>
	<td>=SET.VALUE(D2,LEFT(E2,FIND(&quot;|&quot;,E2)-1))</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
</tr>
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">10</td>
	<td>&nbsp</td>
	<td>=SET.VALUE(E2,RIGHT(E2,LEN(E2)-FIND(&quot;|&quot;,E2)))</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
</tr>
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">11</td>
	<td>unstack input</td>
	<td>=SET.VALUE(D1,LEFT(E1,FIND(&quot;|&quot;,E1)-1))</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
</tr>
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">12</td>
	<td>&nbsp</td>
	<td>=SET.VALUE(E1,RIGHT(E1,LEN(E1)-FIND(&quot;|&quot;,E1)))</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
</tr>
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">13</td>
	<td>update output</td>
	<td>=SET.VALUE(D2,D2&amp;D3&amp;&quot; million&quot;)</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
</tr>
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">14</td>
	<td>update input</td>
	<td>=SET.VALUE(D1,MOD(D1,1000000))</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
</tr>
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">15</td>
	<td nowrap>check if finished</td>
	<td>=IF(D1=0,RETURN(D2))</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
</tr>
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">16</td>
	<td>&nbsp</td>
	<td>=SET.VALUE(D2,D2&amp;IF(D1&lt;100,&quot; and &quot;,&quot; &quot;))</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
</tr>
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">17</td>
	<td>&nbsp</td>
	<td>=END.IF()</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
</tr>
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">18</td>
	<td>&nbsp</td>
	<td>=IF(D1&gt;=1000)</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
</tr>
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">19</td>
	<td>stack input</td>
	<td>=SET.VALUE(E1,D1&amp;&quot;|&quot;&amp;E1)</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
</tr>
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">20</td>
	<td>stack output</td>
	<td>=SET.VALUE(E2,D2&amp;&quot;|&quot;&amp;E2)</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
</tr>
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">21</td>
	<td>get thousands</td>
	<td>=SET.VALUE(D3,saynumber(D1/1000))</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
</tr>
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">22</td>
	<td>unstack output</td>
	<td>=SET.VALUE(D2,LEFT(E2,FIND(&quot;|&quot;,E2)-1))</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
</tr>
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">23</td>
	<td>&nbsp</td>
	<td>=SET.VALUE(E2,RIGHT(E2,LEN(E2)-FIND(&quot;|&quot;,E2)))</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
</tr>
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">24</td>
	<td>unstack input</td>
	<td>=SET.VALUE(D1,LEFT(E1,FIND(&quot;|&quot;,E1)-1))</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
</tr>
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">25</td>
	<td>&nbsp</td>
	<td>=SET.VALUE(E1,RIGHT(E1,LEN(E1)-FIND(&quot;|&quot;,E1)))</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
</tr>
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">26</td>
	<td>update output</td>
	<td>=SET.VALUE(D2,D2&amp;D3&amp;&quot; thousand&quot;)</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
</tr>
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">27</td>
	<td>update input</td>
	<td>=SET.VALUE(D1,MOD(D1,1000))</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
</tr>
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">28</td>
	<td>check if finished</td>
	<td>=IF(D1=0,RETURN(D2))</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
</tr>
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">29</td>
	<td>&nbsp</td>
	<td>=SET.VALUE(D2,D2&amp;IF(D1&lt;100,&quot; and &quot;,&quot; &quot;))</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
</tr>
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">30</td>
	<td>&nbsp</td>
	<td>=END.IF()</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
</tr>
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">31</td>
	<td>&nbsp</td>
	<td>=IF(D1&gt;=100)</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
</tr>
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">32</td>
	<td>stack input</td>
	<td>=SET.VALUE(E1,D1&amp;&quot;|&quot;&amp;E1)</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
</tr>
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">33</td>
	<td>stack output</td>
	<td>=SET.VALUE(E2,D2&amp;&quot;|&quot;&amp;E2)</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
</tr>
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">34</td>
	<td>get hundreds</td>
	<td>=SET.VALUE(D3,saynumber(D1/100))</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
</tr>
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">35</td>
	<td>unstack output</td>
	<td>=SET.VALUE(D2,LEFT(E2,FIND(&quot;|&quot;,E2)-1))</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
</tr>
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">36</td>
	<td>&nbsp</td>
	<td>=SET.VALUE(E2,RIGHT(E2,LEN(E2)-FIND(&quot;|&quot;,E2)))</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
</tr>
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">37</td>
	<td>unstack input</td>
	<td>=SET.VALUE(D1,LEFT(E1,FIND(&quot;|&quot;,E1)-1))</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
</tr>
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">38</td>
	<td>&nbsp</td>
	<td>=SET.VALUE(E1,RIGHT(E1,LEN(E1)-FIND(&quot;|&quot;,E1)))</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
</tr>
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">39</td>
	<td>update output</td>
	<td>=SET.VALUE(D2,D2&amp;D3&amp;&quot; hundred&quot;)</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
</tr>
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">40</td>
	<td>update input</td>
	<td>=SET.VALUE(D1,MOD(D1,100))</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
</tr>
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">41</td>
	<td>check if finished</td>
	<td>=IF(D1=0,RETURN(D2))</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
</tr>
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">42</td>
	<td>&nbsp</td>
	<td>=SET.VALUE(D2,D2&amp;&quot; and &quot;)</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
</tr>
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">43</td>
	<td>&nbsp</td>
	<td>=END.IF()</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
</tr>
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">44</td>
	<td>&nbsp</td>
	<td>=IF(D1&gt;=20)</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
</tr>
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">45</td>
	<td>&nbsp</td>
	<td>=SET.VALUE(D2,D2&amp;CHOOSE(INT(D1/10)-1, &quot;twenty&quot;, &quot;thirty&quot;, &quot;forty&quot;, &quot;fifty&quot;, &quot;sixty&quot;, &quot;seventy&quot;, &quot;eighty&quot;, &quot;ninety&quot;))</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
</tr>
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">46</td>
	<td>&nbsp</td>
	<td>=SET.VALUE(D1,MOD(D1,10))</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
</tr>
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">47</td>
	<td>&nbsp</td>
	<td>=IF(D1=0,RETURN(D2))</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
</tr>
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">48</td>
	<td>&nbsp</td>
	<td>=SET.VALUE(D2,D2&amp;&quot; &quot;)</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
</tr>
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">49</td>
	<td>&nbsp</td>
	<td>=END.IF()</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
</tr>
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">50</td>
	<td>&nbsp</td>
	<td>=SET.VALUE(D2,D2&amp;CHOOSE(D1, &quot;one&quot;, &quot;two&quot;, &quot;three&quot;, &quot;four&quot;, &quot;five&quot;, &quot;six&quot;, &quot;seven&quot;, &quot;eight&quot;, &quot;nine&quot;, &quot;ten&quot;, &quot;eleven&quot;, &quot;twelve&quot;, &quot;thirteen&quot;, &quot;fourteen&quot;, &quot;fifteen&quot;, &quot;sixteen&quot;, &quot;seventeen&quot;, &quot;eighteen&quot;, &quot;nineteen&quot;))</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
</tr>
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">51</td>
	<td>&nbsp</td>
	<td>=RETURN(D2)</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
	<td>&nbsp</td>
</tr>
</table>
<p>If we create a name ('SayNumber') for this function (Macro1!$B$1), we can enter 1234567890 in cell A1 on our worksheet, and =saynumber(A1) in cell A2 on our worksheet, and cell A2 will display:<br>
one thousand two hundred and thirty four million five hundred and sixty seven thousand eight hundred and ninety</p>
<BR CLEAR=ALL>
<!-- PegHelp -->
<hr>
<!-- ************************Topic Break************************* -->
<p><a name="userdefcommands"></a><b>User-defined commands</b></p><UL></UL>
<p>Here is a command macro example.<br>
This macro moves to the beginning of row 5 on the current sheet, inserts a new row, puts the current date into column A, formats it, and moves to column B ready for entry.</p>
<table border="1" cellspacing="0" bordercolordark="#FFFFFF" bordercolorlight="#808080">
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">&nbsp</td>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000"><p align="center">A</p></td>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000"><p align="center">B</p></td>
</tr>
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">1</td>
	<td>NewEntry:</td>
	<td>=SELECT(!$A$5)</td>
</tr>
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">2</td>
	<td>&nbsp</td>
	<td>=INSERT(3)</td>
</tr>
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">3</td>
	<td>&nbsp</td>
	<td>=FORMULA(TODAY())</td>
</tr>
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">4</td>
	<td>&nbsp</td>
	<td>=FORMAT.NUMBER(&quot;dd/mm/yy&quot;)</td>
</tr>
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">5</td>
	<td>&nbsp</td>
	<td>=SELECT(!$B$5)</td>
</tr>
<tr>
	<td bgcolor="#C0C0C0" bordercolordark="#FFFFFF" bordercolorlight="#000000">6</td>
	<td>&nbsp</td>
	<td>=RETURN()</td>
</tr>
</table>
<p>We create a name for this macro, e.g. &quot;NewEntry&quot;, pointing to the reference &quot;Macro1!$B$1&quot;, and assign control key &quot;t&quot; to it.<br>
Then on our main sheet, we can press Ctrl+t and the macro will be run. Note that the macro name in cell A1 is for our reference only, it is not used by the program.</p>
<p>Note that the following control keys are reserved for program operation, and should not be assigned to your command macros:</p>
<table border="0" cellspacing="0">
<tr><td>1</td><td>&nbsp</td><td>Format Cells</td></tr>
<tr><td>c</td><td>&nbsp</td><td>Edit Copy</td></tr>
<tr><td>d</td><td>&nbsp</td><td>Edit Fill Down</td></tr>
<tr><td>e</td><td>&nbsp</td><td>enter edit mode</td></tr>
<tr><td>f</td><td>&nbsp</td><td>Edit Find</td></tr>
<tr><td>g</td><td>&nbsp</td><td>Edit Goto</td></tr>
<tr><td>k</td><td>&nbsp</td><td>Insert Hyperlink</td></tr>
<tr><td>n</td><td>&nbsp</td><td>File New</td></tr>
<tr><td>o</td><td>&nbsp</td><td>File Open</td></tr>
<tr><td>p</td><td>&nbsp</td><td>File Print</td></tr>
<tr><td>q</td><td>&nbsp</td><td>File Exit</td></tr>
<tr><td>r</td><td>&nbsp</td><td>Edit Fill Right</td></tr>
<tr><td>s</td><td>&nbsp</td><td>File Save</td></tr>
<tr><td>v</td><td>&nbsp</td><td>Edit Paste</td></tr>
<tr><td>x</td><td>&nbsp</td><td>Edit Cut</td></tr>
<tr><td>z</td><td>&nbsp</td><td>Edit Undo</td></tr>
<tr><td>;</td><td>&nbsp</td><td>insert date</td></tr>
<tr><td>.</td><td>&nbsp</td><td>insert time</td></tr>
</table>
<p>Other control keys may be reserved in future versions of the program.</p>
<BR CLEAR=ALL>
<!-- PegHelp -->
</BODY>
</HTML>
