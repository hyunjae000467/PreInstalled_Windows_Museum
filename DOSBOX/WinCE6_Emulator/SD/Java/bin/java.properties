#Tue Jul 06 15:19:32 EDT 2004
J9CL0004=Incompatible class library version\: expected JCL v%i, found v%i
J9CL0005=Incompatible class library version\: requires VM v%i, found v%i
J9CL0006=No pre-verify data for java/lang/Object
J9CL0007=timeout value is negative
J9CL0008=nanosecond timeout value out of range
ZIPS0000=Unable to open %s (%s)
ZIPS0001=Unable to open %s (Missing export)
JDBG0000=-Xrunjdwp usage\: -Xrunjdwp\:[help]|[<option>\=<value>, ...]\n
JDBG0001=Option Name and Value           Description                     Default
JDBG0002=---------------------           -----------                     -------
JDBG0003=suspend\=y|n                     wait on startup?                y
JDBG0004=transport\=<name>                transport spec                  none
JDBG0005=address\=<listen/attach address> transport spec                  "localhost\:8888"
JDBG0006=server\=y|n                      listen for debugger?            n
JDBG0007=onthrow\=<exception name>        debug on throw                  none
JDBG0008=onuncaught\=y|n                  debug on any uncaught?          n
JDBG0009=j9methodids\=y|n                 use j9 method ids               n\n
EXEL0000=The following options are non-standard and subject to change without notice.\n
EXEL0001=\  -Xbootclasspath\:<path>    set bootstrap classpath to <path>
EXEL0002=\  -Xbootclasspath/p\:<path>  prepend <path> to bootstrap classpath
EXEL0003=\  -Xbootclasspath/a\:<path>  append <path> to bootstrap classpath
EXEL0004=\n  -Xrun<dll>[\:options]      start JVMPI profiling\n
EXEL0005=\  -Xint           run interpreted only (equivalent to -Xnojit -Xnoaot)
EXEL0006=\  -Xnojit         disable the JIT
EXEL0007=\  -Xnoaot         do not run precompiled code
EXEL0008=\  -Xfuture        enable strictest checks, anticipating future default
EXEL0009=\nArguments to the following options are expressed in bytes.
JDBG0010=Example\: java -Xrunjdwp\:transport\=dt_socket,address\=localhost\:8000\n
JDBG0011=cannot allocate debugServer
JDBG0012=j9dbg_init_server failed
JDBG0013=cannot allocate vm->debuggerReferences pool
JDBG0014=cannot allocate vm->debuggerClassReferences pool
JDBG0015=Debug response server
JDBG0016=jvm attach failed
JDBG0017=ignoring unrecognized debug option\: '%s'
JDBG0018=ignoring unrecognized debug option
J9VM0000=Malformed value for IBM_JAVA_OPTIONS
JDBG0019=unsorted relocation list %zx
J9VM0001=Malformed value for -Xservice
J9VM0002=Options file not found
J9VM0003=JIT compiler "%s" not found. Will use interpreter.
J9VM0004=Cannot load library required by\: %s
J9VM0005=Invalid value for environment variable\: %s
J9VM0006=Invalid command-line option\: %s
EXEL0010=Values suffixed with "k" (kilo) or "m" (mega) will be factored accordingly.\n
J9VM0007=Command-line option unrecognised\: %s
EXEL0011=\  -Xmca<x>        set RAM class segment increment to <x>
J9VM0008=J9VMDllMain not found
EXEL0012=\  -Xmco<x>        set ROM class segment increment to <x>
J9VM0009=J9VMDllMain failed
EXEL0013=\  -Xmn<x>         set new space size to <x>
EXEL0014=\  -Xmn<x>         set initial/maximum new space size to <x>
EXEL0015=\  -Xmns<x>        set initial new space size to <x>
EXEL0016=\  -Xmnx<x>        set maximum new space size to <x>
EXEL0017=\  -Xmo<x>         set old space size to <x>
EXEL0018=\  -Xmo<x>         set initial/maximum old space size to <x>
EXEL0019=\  -Xmos<x>        set initial old space size to <x>
J9VM0010=Failed to initialize %s
J9VM0011=Unable to load %s\: %s
J9VM0012=Unable to unload %s\: %s
J9VM0013=Initialization error in function %s\: %s
J9VM0014=Shutdown error in function %s\: %s
J9VM0015=Initialization error for library %s\: %s
J9VM0016=Initialization error for library %s\: %s
EXEL0020=\  -Xmox<x>        set maximum old space size to <x>
J9VM0017=Could not allocate memory for command line option array
EXEL0021=\  -Xmoi<x>        set old space increment to <x>
J9VM0018=Could not allocate memory for DLL load table pool
EXEL0022=\  -Xms<x>         set old space size to <x>
J9VM0019=Fatal error\: Unable to find and initialize required class %.*s
EXEL0023=\  -Xms<x>         set initial memory size to <x>
EXEL0024=\  -Xmx<x>         set memory maximum to <x>
EXEL0025=\  -Xmr<x>         set remembered set size to <x>
EXEL0026=\  -Xmrx<x>        set maximum size of remembered set to <x>
EXEL0027=\  -Xmso<x>        set OS thread stack size to <x>
EXEL0028=\  -Xiss<x>        set initial java thread stack size to <x>
EXEL0029=\  -Xss<x>         set maximum java thread stack size to <x>
J9VM0020=Searched in %.*s
J9VM0021=Out of memory for interpreter stack map - aborting VM
J9VM0022=Stack map failed, result \= %p - aborting VM
J9VM0023=This may indicate that JAVA_HOME is incorrect, or that class libraries are not installed
J9VM0024=Exception in thread "%.*s" 
J9VM0025=\tat %.*s.%.*s (Native Method)
J9VM0026=\tat %.*s.%.*s (Unknown Source)
J9VM0027=\tat %.*s.%.*s (%.*s)
EXEL0030=\  -Xss<x>         set thread stack size to <x>
J9VM0028=\tat %.*s.%.*s (%.*s\:%u)
EXEL0031=\  -Xmine<x>       set minimum size for heap expansion to <x>
J9VM0029=\tat (Unknown Method)
EXEL0032=\  -Xmaxe<x>       set maximum size for heap expansion to <x>
EXEL0033=\nArguments to the following options are expressed as a decimal from 0 to 1.
EXEL0034=A value of 0.3 represents a request of 30%%\n
EXEL0035=\  -Xminf<x>       minimum percentage of heap free after GC
EXEL0036=\  -Xmaxf<x>       maximum percentage of heap free after GC
EXEL0037=\nArguments to the following options are expressed a decimal numbers.\n
EXEL0038=\  -Xgcthreads<x>                set number of GC threads
EXEL0039=\  -Xnoclassgc                   disable dynamic class unloading
J9VM0030=Invalid UTF8 used in JNI function
J9VM0031=Required class %.*s must be in the boot classpath, but was found in the application class path in %.*s
J9VM0032=Fatal error\: unable to load %s\: %s
J9VM0033=Fatal error\: failed to initialize %s
EXEL0040=\  -Xclassgc                     enable dynamic class unloading
EXEL0041=\  -Xalwaysclassgc               enable dynamic class unloading on every GC
EXEL0042=\  -Xnocompactexplicitgc         disable compaction on a system GC
EXEL0043=\  -Xcompactexplicitgc           enable compaction on every system GC
EXEL0044=\  -Xcompactgc                   enable compaction
EXEX0000=Usage\:\t%s [options] classname [args...]
EXEL0045=\  -Xnocompactgc                 disable compaction
EXEX0001=Usage\:\t%s [options] -jxe\:<jxeFile> [args...]
EXEL0046=\  -Xlp                          enable large page support
EXEX0002=\n[options]\n  -classpath <path>\n  -cp <path>       set classpath to <path>.
EXEL0047=\n  -Xdbg\:<options>               enable debug, JDWP standard options
EXEX0003=\  -jxe\:<jxeFile>   run the named jxe file.
EXEL0048=\  -Xrunjdwp\:<options>           enable debug, JDWP standard options
EXEX0004=\  -jxespace\:<physicalAddr>,<size>,<logicalAddr>\n                   map memory region for jxes, (values are in hex).\n  -jxeaddr\:<logicalAddr>\n                   run a jxe directly from memory, (address is in hex).
EXEL0049=\  -Xdbginfo\:<symbol file path>  enable debug info server
EXEX0005=\  -D<prop>\=<val>   set the value of a system property.\n
EXEX0006=\  -debug\:<options> enable debug, JDWP standard <options>.\n
EXEX0007=\  -jcl\:<config>[\:options]\n                   specify which JCL DLL to use (e.g. cdc, cldc, ...).\n
EXEX0008=\  -verbose[\:class,gc,stack,sizes]\n                   enable verbose output (default\=class).\n
EXEX0009=\  -verify          enable class file verification.\n  -X               print help on non-standard options.
EXEL0050=\  -Xrdbginfo\:<host>\:<port>      enable remote debug info server
EXEL0051=\nWARNING\: The command line argument "%s" has been deprecated.\nWARNING\: Use "-classpath <path>" or "-cp <path>".
EXEL0052=\nWARNING\: The command line argument "%s" has been deprecated.\nWARNING\: Use the -X equivalent.
EXEL0053=Licensed Materials - Property of IBM\n\nJ9 - VM for the Java(TM) platform, Version %s
EXEL0054=(c) Copyright IBM Corp. 1991, 2004  All Rights Reserved
EXEX0010=%s requires a parameter
EXEL0055=Target\: %s\n
EXEX0011=Error loading jxe\: %s
EXEL0056=IBM is a registered trademark of IBM Corp.\nJava and all Java-based marks and logos are trademarks or registered\ntrademarks of Sun Microsystems, Inc.\n
EXEX0012=-jar option is not available for this class library
EXEL0057=java version "1.3.0"\n
EXEX0013=Internal VM error\: Failed to create Java VM
EXEL0058=Internal VM error\: Out of memory
EXEX0014=Run %s -help for usage
EXEL0059=Internal VM error\: Failed to find class java/lang/String
EXEX0015=VM startup error\: Out of memory
EXEX0016=Invalid jxespace parameters.
EXEX0017=Error mapping jxe in flash
EXEX0018=jxeaddr location 0x%08X outside of range 0x%08X to 0x%08X
EXEX0019=Logical mapped addr\=0x%X for physical address at 0x%X and size 0x%X
EXEL0060=Internal VM error\: Failed to create byte array for class name %s
EXEL0061=Internal VM error\: Failed to create java/lang/String for class name %s
EXEL0062=Internal VM error\: Out of memory converting string to UTF Chars for class name %s
EXEL0063=Class %s does not implement main()
EXEL0064=The method main must be declared public, static and void.
EXEX0020=Missing required export
EXEL0065=Internal VM error\: Failed to create argument array
EXEX0021=Error loading jxe relocator\: %s (%s)
EXEL0066=Internal VM error\: Failed to create byte array for argument %s
EXEX0022=Unable to load rom image from jxe.
EXEL0067=Internal VM error\: Failed to create java/lang/String for argument %s
EXEL0068=Internal VM error\: Failed to set array element for %s
EXEL0069=Failed to find ROM image
JDTS0000=Listening for transport dt_socket at address\: %d
EXEL0070=ROM image is wrong version
EXEL0071=Failed to find main class name
EXEL0072=VM startup error\: Out of memory
EXEL0073=Internal VM error\: Failed to create Java VM
EXEL0074=Unable to redirect console I/O to\: %s\:%d
J9CL0000=Incompatible class library
J9CL0001=Try running with -jcl\:%s
J9CL0002=Classes are from a non-J9 library, or an incorrectly reduced JXE
J9CL0003=Incompatible class library version\: JCL %x, VM %x
